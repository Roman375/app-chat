{"version":3,"sources":["components/Button/index.jsx","components/Message/index.jsx","components/DialogItem/index.jsx","components/Time/index.js","components/Dialogs/index.jsx","components/ChatInput/index.jsx","components/Search/index.jsx","containers/Dialogs/index.jsx","pages/Home/index.jsx","HomeContainer.js","App.js","index.js"],"names":["Button","props","className","classNames","size","prototype","PropTypes","string","Message","messages","avatar","onToggle","date","user","text","isMe","answers","map","message","key","id","src","title","DialogItem","created_at","isOnline","fullname","isToday","format","Date","getMessageTime","Time","formatDistance","now","addSuffix","locale","uk","propTypes","Dialogs","items","userId","onSearch","inputValue","length","orderBy","item","_id","image","Empty","PRESENTED_IMAGE_SIMPLE","ChatInput","ref","useRef","value","fetch","then","r","json","res","data","console","log","type","placeholder","SendOutlined","onClick","onAdd","current","setTimeout","Search","onChange","e","target","allowClear","enterButton","useState","setValue","Array","from","filtred","setFiltredItems","onChangeInput","filter","dialog","toLowerCase","indexOf","Home","Add","dialogsJson","HomeCont","setMessages","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newMessage","prev","App","exact","path","component","HomeContainer","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb147883.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport classNames from 'classnames'\r\nimport './Button.scss'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <BaseButton\r\n      {...props}\r\n      className={classNames('button', props.className, {\r\n        'button--large': props.size === 'large',\r\n      })}\r\n    />\r\n  )\r\n}\r\n\r\nButton.prototype = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Message.scss'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport classNames from 'classnames'\r\nimport { Time } from 'components'\r\nimport { Empty } from 'antd'\r\n\r\nconst Message = ({ messages, onToggle, avatar, user, text, date, isMe, answers }) => {\r\n  return (\r\n    \r\n    <ul>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  user: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Time from 'components'\r\nimport classNames from 'classnames'\r\nimport format from 'date-fns/format'\r\nimport isToday from 'date-fns/isToday'\r\nimport './DialogsItem.scss'\r\n\r\nconst getMessageTime = (created_at) => {\r\n  if (isToday(created_at)) {\r\n    return format(new Date(created_at), 'MM:mm')\r\n  } else {\r\n    return format(new Date(created_at), 'PP')\r\n  }\r\n}\r\n\r\nconst DialogItem = ({ user, date, isMe, created_at, text }) => {\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div\r\n        className={classNames('dialogs__item', {\r\n          'dialogs__item--online': user.isOnline,\r\n        })}\r\n      >\r\n        <div className=\"dialogs__item-avatar\">\r\n          <img src={user.avatar}></img>\r\n        </div>\r\n        <div className=\"dialogs__item-info\">\r\n          <div className=\"dialogs__item-info-top\">\r\n            <b>{user.fullname}</b>\r\n            <span>\r\n              {getMessageTime(created_at)}\r\n            </span>\r\n          </div>\r\n          <div className=\"dialogs__item-info-bottom\">\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport { uk } from 'date-fns/esm/locale'\r\n\r\nconst Time = ({ date }) => {\r\n  return (\r\n    <>\r\n      {formatDistance(new Date(date), Date.now(), {\r\n        addSuffix: true,\r\n        locale: uk,\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nTime.propTypes = {\r\n  date: PropTypes.string,\r\n}\r\nexport default Time\r\n","import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport './Dialogs.scss'\r\nimport { DialogItem, Search } from '../'\r\nimport { Input, Empty } from 'antd'\r\n\r\nconst Dialogs = ({ items, userId, onSearch, inputValue }) => {\r\n  return (\r\n    <div className=\"dialogs\">\r\n      {/* <Search onSearch={onSearch} inputValue={inputValue}/> */}\r\n      {/* <h1 className=\"dialogs-title\">Chats</h1> */}\r\n      <div className='dialogs-item'>\r\n      {items.length ? (\r\n        orderBy(items, ['created_at'], ['desc']).map((item) => (\r\n          <DialogItem\r\n            key={item._id}\r\n            {...item}\r\n            isMe={item.user._id === userId}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n      )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React, { useRef, useState } from 'react'\r\nimport { Input, message } from 'antd'\r\nimport { SendOutlined } from '@ant-design/icons'\r\nimport './ChatInput.scss'\r\nimport axios from 'axios';\r\n\r\nconst ChatInput = (props) => {\r\n  const ref = useRef(null)\r\n\r\n  const keyPressHandler = (event) => {\r\n \r\n    props.onAdd(ref.current.value)\r\n    ref.current.value = ''\r\n  }\r\n\r\n  const keyPress = (event) => {\r\n    props.onAdd(ref.current.value)\r\n    ref.current.value = ''\r\n  }\r\n\r\n let value = fetch('https://api.chucknorris.io/jokes/random')\r\n  .then((r) => r.json()\r\n .then((res) => ({ data: res})))\r\n  .then((res) => console.log(res.data.value))\r\n  \r\n\r\n\r\n  \r\n\r\nconsole.log(value)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          ref={ref}\r\n          id=\"title\"\r\n          type=\"text\"\r\n          size=\"large\"\r\n          placeholder=\"Type your message\"\r\n        />\r\n        <div className=\"chat-input__actions\">\r\n          <button>\r\n            <SendOutlined\r\n              onClick={() => {\r\n                keyPressHandler()\r\n                setTimeout(() => {\r\n                  keyPress(\r\n                    ref.current.value = value\r\n                  )\r\n                }, 2000)\r\n              }}\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ChatInput\r\n","import React from 'react'\r\nimport './Search.scss'\r\nimport { Input } from 'antd'\r\n\r\nconst Search = ({ onSearch, inputValue }) => {\r\n  return (\r\n      <div className=\"search\">\r\n        <Input.Search\r\n          placeholder=\"input search text\"\r\n          onChange={(e) => onSearch(e.target.value)}\r\n          value={inputValue}\r\n          allowClear\r\n          enterButton\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\nimport { Dialogs as BaseDialogs, Search } from 'components'\r\nimport './Dialogs.scss'\r\n\r\nconst Dialogs = ({ items, userId }) => {\r\n  const [inputValue, setValue] = useState('')\r\n  const [filtred, setFiltredItems] = useState(Array.from(items))\r\n\r\n  const onChangeInput = (value) => {\r\n    setFiltredItems(items.filter(\r\n      dialog => dialog.user.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n    ));\r\n\r\n\r\n    setValue(value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Search onSearch={onChangeInput}\r\n        inputValue={inputValue} />\r\n      <h1 className=\"title\">Chats</h1>\r\n      <BaseDialogs\r\n        userId={userId}\r\n        items={filtred}\r\n        onSearch={onChangeInput}\r\n        inputValue={inputValue}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport './Home.scss'\r\nimport { Message, ChatInput, Search } from 'components'\r\nimport { Dialogs } from 'containers'\r\n\r\nimport dialogsJson from 'dialogs.json'\r\n\r\nconst Home = ({isMe, messages, onToggle, onAdd, Add, answers }) => {\r\n  const onSearch = (value) => console.log(value)\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat__sidebar\">\r\n          <div className=\"chat__sidebar-header chat__sidebar-header--online\">\r\n            <div className=\"chat__sidebar-header-avatar\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat__sidebar-dialogs\">\r\n            <Dialogs items={dialogsJson} />\r\n          </div>\r\n        </div>\r\n        <div className=\"chat__dialog\">\r\n          <div className=\"chat__dialog-header chat__dialog-header--online\">\r\n            <div className=\"chat__dialog-header-avatar\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\" />\r\n            </div>\r\n            <b className=\"chat__dialog-header-fullname\">Roman</b>\r\n          </div>\r\n          <div className=\"chat__dialog-message\">\r\n            <Message\r\n              messages={messages}\r\n              answers={answers}\r\n              onToggle={onToggle}\r\n              isMe={isMe}\r\n              avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n            />\r\n          </div>\r\n          <div className=\"chat__dialog-input\">\r\n            <ChatInput onAdd={onAdd}\r\n            Add={Add} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ChatInput, Message } from 'components'\r\nimport { Home } from './pages'\r\n\r\nconst HomeCont = () => {\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('messages') || '[]')\r\n    setMessages(saved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('messages', JSON.stringify(messages))\r\n  }, [messages])\r\n\r\n  const addHandler = (title) => {\r\n    const newMessage = {\r\n      title: title,\r\n      id: Date.now(),\r\n      isMe: true,\r\n    }\r\n    setMessages((prev) => [...prev, newMessage])\r\n  }\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n      <Home\r\n        messages={messages}\r\n        onAdd={addHandler}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeCont\r\n","import React from 'react'\r\nimport './styles/index.scss'\r\nimport { Auth } from './pages'\r\nimport { Route } from 'react-router-dom'\r\nimport { Home } from 'pages'\r\nimport HomeContainer from './HomeContainer'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* <Auth /> */}\r\n        <Route exact path='/ms' component={HomeContainer} />\r\n        {/* <div>{fetch(\"https://api.chucknorris.io/jokes/random\").then(r =>  r.json().then(data => ({status: r.status, data: data}))).then(data => console.log(data.data.value))}</div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}