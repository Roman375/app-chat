{"version":3,"sources":["components/Button/index.jsx","components/Message/index.jsx","components/Message/index2.jsx","components/DialogItem/index.jsx","components/Time/index.js","components/Dialogs/index.jsx","components/ChatInput/index.jsx","components/Search/index.jsx","core/axios.js","containers/Dialogs/index.jsx","components/Messages/index2.jsx","pages/Home/index.jsx","HomeContainer.js","App.js","redux/reducers/dialogs.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Button","props","className","classNames","size","prototype","PropTypes","string","Message","messages","avatar","onToggle","user","text","date","isMe","answers","map","message","key","id","src","title","DialogItem","_id","created_at","setCurrentDialog","isOnline","fullname","isToday","format","Date","getMessageTime","Time","formatDistance","now","addSuffix","locale","uk","propTypes","Dialogs","items","userId","onSearch","inputValue","length","orderBy","item","image","Empty","PRESENTED_IMAGE_SIMPLE","ChatInput","ref","useRef","type","placeholder","SendOutlined","onClick","onAdd","current","value","setTimeout","fetch","then","r","json","res","data","Add","Search","onChange","e","target","allowClear","enterButton","axios","defaults","baseURL","fetchDialogs","useState","setValue","Array","from","filtred","setFiltredItems","onChangeInput","filter","dialog","toLowerCase","indexOf","Messages","Home","dialogsJson","HomeCont","setMessages","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newMessage","prev","App","HomeContainer","React","Component","initialState","currentDialog","combineReducers","dialogs","state","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5128818.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport classNames from 'classnames'\r\nimport './Button.scss'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <BaseButton\r\n      {...props}\r\n      className={classNames('button', props.className, {\r\n        'button--large': props.size === 'large',\r\n      })}\r\n    />\r\n  )\r\n}\r\n\r\nButton.prototype = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Message.scss'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport classNames from 'classnames'\r\nimport { Time } from 'components'\r\nimport { Empty } from 'antd'\r\n\r\nconst Message = ({ messages, onToggle, avatar, user, text, date, isMe, answers }) => {\r\n  debugger\r\n  return (\r\n    <ul className='list'>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {message.date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={message.date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  user: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n{/* <ul>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul> */}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Message.scss'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport classNames from 'classnames'\r\nimport { Time } from 'components'\r\nimport { Empty } from 'antd'\r\n\r\nconst Message = ({ messages, onToggle, avatar, user, text, date, isMe, answers }) => {\r\n  return (\r\n    \r\n            <div\r\n              className={classNames('message', {\r\n                'message--isme': isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{text}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n  )\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  user: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n{/* <ul>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul> */}","import React from 'react'\r\nimport Time from 'components'\r\nimport classNames from 'classnames'\r\nimport format from 'date-fns/format'\r\nimport isToday from 'date-fns/isToday'\r\nimport './DialogsItem.scss'\r\n\r\nconst getMessageTime = (created_at) => {\r\n  if (isToday(created_at)) {\r\n    return format(new Date(created_at), 'MM:mm')\r\n  } else {\r\n    return format(new Date(created_at), 'PP')\r\n  }\r\n}\r\n\r\nconst DialogItem = ({_id, user, date, isMe, created_at, text, setCurrentDialog }) => {\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div\r\n        className={classNames('dialogs__item', {\r\n          'dialogs__item--online': user.isOnline,\r\n        })}\r\n        // onClick={setCurrentDialog.bind(this, _id)}\r\n      >\r\n        <div className=\"dialogs__item-avatar\">\r\n          <img src={user.avatar}></img>\r\n        </div>\r\n        <div className=\"dialogs__item-info\">\r\n          <div className=\"dialogs__item-info-top\">\r\n            <b>{user.fullname}</b>\r\n            <span>\r\n              {getMessageTime(created_at)}\r\n            </span>\r\n          </div>\r\n          <div className=\"dialogs__item-info-bottom\">\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport { uk } from 'date-fns/esm/locale'\r\n\r\nconst Time = ({ date }) => {\r\n  return (\r\n    <>\r\n      {formatDistance(new Date(date), Date.now(), {\r\n        addSuffix: true,\r\n        locale: uk,\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nTime.propTypes = {\r\n  date: PropTypes.string,\r\n}\r\nexport default Time\r\n","import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport './Dialogs.scss'\r\nimport { DialogItem, Search } from '../'\r\nimport { Input, Empty } from 'antd'\r\n\r\nconst Dialogs = ({ items, userId, onSearch, inputValue, setCurrentDialog }) => {\r\n  return (\r\n    \r\n      <div className=\"dialogs\">\r\n        {/* <Search onSearch={onSearch} inputValue={inputValue}/> */}\r\n        {/* <h1 className=\"dialogs-title\">Chats</h1> */}\r\n        <div className=\"dialogs-item\">\r\n          {items.length ? (\r\n            orderBy(items, ['created_at'], ['desc']).map((item) => (\r\n              <DialogItem\r\n                // setCurrentDialog={setCurrentDialog}\r\n                key={item._id}\r\n                {...item}\r\n                isMe={item.user._id === userId}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React, { useRef, useState } from 'react'\r\nimport { Input, message } from 'antd'\r\nimport { SendOutlined } from '@ant-design/icons'\r\nimport './ChatInput.scss'\r\nimport axios from 'axios'\r\n\r\nconst ChatInput = (props) => {\r\n  const ref = useRef(null)\r\n\r\n  const keyPressHandler = (event) => {\r\n    props.onAdd(ref.current.value)\r\n    ref.current.value = ''\r\n  }\r\n\r\n  //   let value = fetch('https://api.chucknorris.io/jokes/random')\r\n  //   .then((r) => r.json()\r\n  //  .then((res) => ({ data: res})))\r\n  //   .then((res) => console.log(res.data.value))\r\n\r\n  const keyPress = (event) => {\r\n    fetch('https://api.chucknorris.io/jokes/random')\r\n      .then((r) => r.json().then((res) => ({ data: res })))\r\n      .then((res) => props.Add(res.data.value))\r\n    // props.onAdd(ref.current.value = res.data.value)\r\n  }\r\n\r\n  // console.log(value)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          ref={ref}\r\n          id=\"title\"\r\n          type=\"text\"\r\n          size=\"large\"\r\n          placeholder=\"Type your message\"\r\n        />\r\n        <div className=\"chat-input__actions\">\r\n          <button>\r\n            <SendOutlined\r\n              onClick={() => {\r\n                keyPressHandler()\r\n                setTimeout(() => {\r\n                  keyPress()\r\n                  // ref.current.value = value\r\n                }, 2000)\r\n              }}\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ChatInput\r\n","import React from 'react'\r\nimport './Search.scss'\r\nimport { Input } from 'antd'\r\n\r\nconst Search = ({ onSearch, inputValue }) => {\r\n  return (\r\n      <div className=\"search\">\r\n        <Input.Search\r\n          placeholder=\"input search text\"\r\n          onChange={(e) => onSearch(e.target.value)}\r\n          value={inputValue}\r\n          allowClear\r\n          enterButton\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL='http://localhost:9999'\r\n\r\nexport default axios","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dialogs as BaseDialogs, Search } from 'components'\r\nimport { dialogsActions } from 'redux/actions'\r\nimport './Dialogs.scss'\r\n\r\nconst Dialogs = ({ fetchDialogs, setCurrentDialog, items, userId }) => {\r\n  const [inputValue, setValue] = useState('')\r\n  const [filtred, setFiltredItems] = useState(Array.from(items))\r\n\r\n  const onChangeInput = (value) => {\r\n    debugger\r\n    setFiltredItems(\r\n      items.filter(\r\n        (dialog) =>\r\n          dialog.user.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n      )\r\n    )\r\n    setValue(value)\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (!items.length) {\r\n  //     fetchDialogs()\r\n  //   } else {\r\n  //     setFiltredItems(items)\r\n  //   }\r\n  // }, [items])\r\n\r\n  return (\r\n    <>\r\n      <Search onSearch={onChangeInput} inputValue={inputValue} />\r\n      <h1 className=\"title\">Chats</h1>\r\n      <BaseDialogs\r\n        userId={userId}\r\n        items={filtred}\r\n        onSearch={onChangeInput}\r\n        inputValue={inputValue}\r\n        // setCurrentDialog={setCurrentDialog}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default\r\n//  connect(({ dialogs }) => dialogs, dialogsActions)(\r\n  Dialogs\r\n  // )\r\n","import React from 'react'\r\nimport Message2 from '../Message/index2'\r\nimport { Empty } from 'antd'\r\n\r\nconst Messages = ({ items, messages, onAdd , Add}) => {\r\n  debugger\r\n  return  (\r\n    <div>\r\n        <Message2\r\n              text='Hello'\r\n              isMe={false}\r\n              avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n              date='Fri Nov 06 2020 13:11:58'\r\n            />\r\n            <Message2\r\n              text='Hi'\r\n              isMe={true}\r\n              avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n              date='Fri Nov 06 2020 13:11:58'\r\n            />\r\n            <Message2\r\n              text='How are you?'\r\n              isMe={false}\r\n              avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n              date='Fri Nov 06 2020 13:11:58'\r\n            />\r\n    </div>\r\n  \r\n  ) \r\n}\r\n\r\nexport default Messages\r\n","import React from 'react'\r\nimport './Home.scss'\r\nimport $ from 'jquery'\r\nimport { Message, ChatInput } from 'components'\r\nimport { Dialogs, Messages } from 'containers'\r\nimport Messages2 from '../../components/Messages/index2'\r\n\r\nimport dialogsJson from 'dialogs.json'\r\n\r\nconst Home = ({ messages, onToggle, onAdd, Add, answers }) => {\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat__sidebar\">\r\n          <div className=\"chat__sidebar-header chat__sidebar-header--online\">\r\n            <div className=\"chat__sidebar-header-avatar\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat__sidebar-dialogs\">\r\n            <Dialogs \r\n            items={dialogsJson} \r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"chat__dialog\">\r\n          <div className=\"chat__dialog-header chat__dialog-header--online\">\r\n            <div className=\"chat__dialog-header-avatar\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\" />\r\n            </div>\r\n            <b className=\"chat__dialog-header-fullname\">Roman</b>\r\n          </div>\r\n          <div className=\"chat__dialog-message\" id='wrapp'>\r\n\r\n            {/* <Messages \r\n            avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"/> */}\r\n            \r\n            <Messages2\r\n              \r\n            />\r\n            <Message\r\n              messages={messages}\r\n              answers={answers}\r\n              onToggle={onToggle}\r\n              avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n            />\r\n            \r\n          </div>\r\n          <div className=\"chat__dialog-input\">\r\n            <ChatInput onAdd={onAdd}\r\n            Add={Add} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ChatInput, Message } from 'components'\r\nimport { Home } from './pages'\r\n\r\nconst HomeCont = () => {\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('messages') || '[]')\r\n    setMessages(saved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('messages', JSON.stringify(messages))\r\n  }, [messages])\r\n\r\n  const addHandler = (title) => {\r\n    const newMessage = {\r\n      title: title,\r\n      id: Date.now(),\r\n      isMe: true,\r\n      date:new Date()\r\n    }\r\n    setMessages((prev) => [...prev, newMessage])\r\n  }\r\n  const keyPress = (title) => {\r\n    const newMessage = {\r\n      title: title,\r\n      id: Date.now(),\r\n      isMe: false,\r\n      date: new Date()\r\n    }\r\n    setMessages((prev) => [...prev, newMessage])\r\n  }\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n      <Home\r\n        messages={messages}\r\n        onAdd={addHandler}\r\n        Add={keyPress}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeCont\r\n","import React from 'react'\r\nimport './styles/index.scss'\r\nimport { Auth } from './pages'\r\nimport { Route } from 'react-router-dom'\r\nimport { Home } from 'pages'\r\nimport HomeContainer from './HomeContainer'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* <Route exact path='/s' component={HomeContainer} /> */}\r\n        <HomeContainer />\r\n        {/* <h1>Hello</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  items: [],\r\n  currentDialog: null,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'DIALOGS:SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n      }\r\n    case 'DIALOGS:SET_CURRENT_DIALOG':\r\n      return {\r\n        ...state,\r\n        currentDialog: payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport dialogs from './dialogs'\r\n \r\nexport default combineReducers({\r\n    dialogs,\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      {/* <React.StrictMode> */}\r\n        <App />\r\n      {/* </React.StrictMode> */}\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}