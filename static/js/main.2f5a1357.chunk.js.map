{"version":3,"sources":["components/Button/index.jsx","components/Message/index.jsx","components/Message/index2.jsx","components/Messages/index.jsx","components/DialogItem/index.jsx","components/Time/index.js","components/Dialogs/index.jsx","components/ChatInput/index.jsx","components/Search/index.jsx","core/axios.js","api/dialogs.js","api/messages.js","redux/actions/dialogs.js","redux/actions/messages.js","containers/Dialogs/index.jsx","containers/Messages/index.jsx","pages/Home/index.jsx","HomeContainer.js","App.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Button","props","className","classNames","size","prototype","PropTypes","string","Message","messages","avatar","onToggle","user","text","date","isMe","answers","map","message","key","id","src","title","Messages","items","item","DialogItem","_id","created_at","setCurrentDialog","isOnline","onClick","bind","fullname","isToday","format","Date","getMessageTime","Time","formatDistance","now","addSuffix","locale","uk","propTypes","Dialogs","userId","onSearch","inputValue","length","orderBy","image","Empty","PRESENTED_IMAGE_SIMPLE","ChatInput","ref","useRef","type","placeholder","SendOutlined","onAdd","current","value","setTimeout","fetch","then","r","json","res","data","Add","Search","onChange","e","target","allowClear","enterButton","axios","defaults","baseURL","get","actions","setDialogs","payload","fetchDialogs","dispatch","dialogsApi","setMessages","fetchMessages","dialogId","messagesApi","connect","dialogs","dialogsActions","useState","setValue","Array","from","filtred","setFiltredItems","onChangeInput","filter","dialog","toLowerCase","indexOf","useEffect","currentDialog","messagesActions","Home","HomeCont","saved","JSON","parse","localStorage","getItem","setItem","stringify","newMessage","prev","App","HomeContainer","React","Component","initialState","combineReducers","state","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f5a1357.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport classNames from 'classnames'\r\nimport './Button.scss'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <BaseButton\r\n      {...props}\r\n      className={classNames('button', props.className, {\r\n        'button--large': props.size === 'large',\r\n      })}\r\n    />\r\n  )\r\n}\r\n\r\nButton.prototype = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Message.scss'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport classNames from 'classnames'\r\nimport { Time } from 'components'\r\nimport { Empty } from 'antd'\r\n\r\nconst Message = ({ messages, onToggle, avatar, user, text, date, isMe, answers }) => {\r\n  debugger\r\n  return (\r\n    <ul className='list'>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {message.date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={message.date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  user: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n{/* <ul>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul> */}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Message.scss'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport classNames from 'classnames'\r\nimport { Time } from 'components'\r\nimport { Empty } from 'antd'\r\n\r\nconst Message = ({  avatar, text, date, isMe }) => {\r\n  return (\r\n    \r\n            <div\r\n              className={classNames('message', {\r\n                'message--isme': isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{text}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n  )\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  user: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n{/* <ul>\r\n      {messages.map((message) => {\r\n          return(\r\n            <div\r\n              key={message.id}\r\n              className={classNames('message', {\r\n                'message--isme': message.isMe,\r\n              })}\r\n            >\r\n              <div className=\"message__content\">\r\n                <div className=\"message__avatar\">\r\n                  <img src={avatar} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                  <div className=\"message__bubble\">\r\n                    <span className=\"message__text\">{message.title}</span>\r\n                  </div>\r\n                  {date && (\r\n                    <span className=\"message__date\">\r\n                      <Time date={date} />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) \r\n      })}\r\n    </ul> */}","import React from 'react'\r\nimport Message2 from '../Message/index2'\r\nimport { Message } from 'components'\r\nimport { Empty } from 'antd'\r\n\r\nconst Messages = ({ items, messages, answers, avatar }) => {\r\n  debugger\r\n  return items ? (\r\n    <div>\r\n      {items.map((item) => (\r\n        <Message2 {...item} />\r\n      ))}\r\n      <Message messages={messages} answers={answers} avatar={avatar} />\r\n    </div>\r\n  ) : (\r\n    <Empty />\r\n  )\r\n}\r\n\r\nexport default Messages\r\n","import React from 'react'\r\nimport Time from 'components'\r\nimport classNames from 'classnames'\r\nimport format from 'date-fns/format'\r\nimport isToday from 'date-fns/isToday'\r\nimport './DialogsItem.scss'\r\n\r\nconst getMessageTime = (created_at) => {\r\n  if (isToday(created_at)) {\r\n    return format(new Date(created_at), 'MM:mm')\r\n  } else {\r\n    return format(new Date(created_at), 'PP')\r\n  }\r\n}\r\n\r\nconst DialogItem = ({_id, user, date, isMe, created_at, text, setCurrentDialog }) => {\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div\r\n        className={classNames('dialogs__item', {\r\n          'dialogs__item--online': user.isOnline,\r\n        })}\r\n        onClick={setCurrentDialog.bind(this, _id)}\r\n      >\r\n        <div className=\"dialogs__item-avatar\">\r\n          <img src={user.avatar}></img>\r\n        </div>\r\n        <div className=\"dialogs__item-info\">\r\n          <div className=\"dialogs__item-info-top\">\r\n            <b>{user.fullname}</b>\r\n            <span>\r\n              {getMessageTime(created_at)}\r\n            </span>\r\n          </div>\r\n          <div className=\"dialogs__item-info-bottom\">\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport { uk } from 'date-fns/esm/locale'\r\n\r\nconst Time = ({ date }) => {\r\n  return (\r\n    <>\r\n      {formatDistance(new Date(date), Date.now(), {\r\n        addSuffix: true,\r\n        locale: uk,\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nTime.propTypes = {\r\n  date: PropTypes.string,\r\n}\r\nexport default Time\r\n","import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport './Dialogs.scss'\r\nimport { DialogItem, Search } from '../'\r\nimport { Input, Empty } from 'antd'\r\n\r\nconst Dialogs = ({ items, userId, onSearch, inputValue, setCurrentDialog }) => {\r\n  return (\r\n    \r\n      <div className=\"dialogs\">\r\n        {/* <Search onSearch={onSearch} inputValue={inputValue}/> */}\r\n        {/* <h1 className=\"dialogs-title\">Chats</h1> */}\r\n        <div className=\"dialogs-item\">\r\n          {items.length ? (\r\n            orderBy(items, ['created_at'], ['desc']).map((item) => (\r\n              <DialogItem\r\n                setCurrentDialog={setCurrentDialog}\r\n                key={item._id}\r\n                {...item}\r\n                isMe={item.user._id === userId}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React, { useRef, useState } from 'react'\r\nimport { Input, message } from 'antd'\r\nimport { SendOutlined } from '@ant-design/icons'\r\nimport './ChatInput.scss'\r\nimport axios from 'axios'\r\n\r\nconst ChatInput = (props) => {\r\n  const ref = useRef(null)\r\n\r\n  const keyPressHandler = (event) => {\r\n    props.onAdd(ref.current.value)\r\n    ref.current.value = ''\r\n  }\r\n\r\n  //   let value = fetch('https://api.chucknorris.io/jokes/random')\r\n  //   .then((r) => r.json()\r\n  //  .then((res) => ({ data: res})))\r\n  //   .then((res) => console.log(res.data.value))\r\n\r\n  const keyPress = (event) => {\r\n    fetch('https://api.chucknorris.io/jokes/random')\r\n      .then((r) => r.json().then((res) => ({ data: res })))\r\n      .then((res) => props.Add(res.data.value))\r\n    // props.onAdd(ref.current.value = res.data.value)\r\n  }\r\n\r\n  // console.log(value)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          ref={ref}\r\n          id=\"title\"\r\n          type=\"text\"\r\n          size=\"large\"\r\n          placeholder=\"Type your message\"\r\n        />\r\n        <div className=\"chat-input__actions\">\r\n          <button>\r\n            <SendOutlined\r\n              onClick={() => {\r\n                keyPressHandler()\r\n                setTimeout(() => {\r\n                  keyPress()\r\n                  // ref.current.value = value\r\n                }, 2000)\r\n              }}\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ChatInput\r\n","import React from 'react'\r\nimport './Search.scss'\r\nimport { Input } from 'antd'\r\n\r\nconst Search = ({ onSearch, inputValue }) => {\r\n  return (\r\n      <div className=\"search\">\r\n        <Input.Search\r\n          placeholder=\"input search text\"\r\n          onChange={(e) => onSearch(e.target.value)}\r\n          value={inputValue}\r\n          allowClear\r\n          enterButton\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL='http://localhost:9999'\r\n\r\nexport default axios","import { axios } from 'core'\r\n\r\nexport default {\r\n  getAll: () => axios.get('/dialogs'),\r\n}\r\n","import { axios } from 'core'\r\n\r\nexport default {\r\n  getAllByDialogId: (id) => axios.get('/messages?dialog=' + id),\r\n}\r\n","import { dialogsApi } from 'api'\r\n\r\n\r\nconst actions = {\r\n  setDialogs: (items) => ({\r\n    type: 'DIALOGS:SET_ITEMS',\r\n    payload: items,\r\n  }),\r\n  setCurrentDialog: id => ({\r\n    type: 'DIALOGS:SET_CURRENT_DIALOG',\r\n    payload: id,\r\n  }),\r\n  fetchDialogs: () => (dispatch) => {\r\n    dialogsApi.getAll().then(({ data }) => {\r\n      dispatch(actions.setDialogs(data))\r\n    })\r\n  },\r\n}\r\n\r\nexport default actions","import { messagesApi } from 'api'\r\n\r\n\r\nconst actions = {\r\n  setMessages: (items) => ({\r\n    type: 'MESSAGES:SET_ITEMS',\r\n    payload: items,\r\n  }),\r\n  fetchMessages: (dialogId) => (dispatch) => {\r\n    messagesApi.getAllByDialogId(dialogId).then(({ data }) => {\r\n      dispatch(actions.setMessages (data))\r\n    })\r\n  },\r\n}\r\n\r\nexport default actions","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dialogs as BaseDialogs, Search } from 'components'\r\nimport { dialogsActions } from 'redux/actions'\r\nimport './Dialogs.scss'\r\n\r\nconst Dialogs = ({ fetchDialogs, setCurrentDialog, items, userId }) => {\r\n  const [inputValue, setValue] = useState('')\r\n  const [filtred, setFiltredItems] = useState(Array.from(items))\r\n\r\n  const onChangeInput = (value) => {\r\n    debugger\r\n    setFiltredItems(\r\n      items.filter(\r\n        (dialog) =>\r\n          dialog.user.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n      )\r\n    )\r\n    setValue(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!items.length) {\r\n      fetchDialogs()\r\n    } else {\r\n      setFiltredItems(items)\r\n    }\r\n  }, [items])\r\n\r\n  return (\r\n    <>\r\n      <Search onSearch={onChangeInput} inputValue={inputValue} />\r\n      <h1 className=\"title\">Chats</h1>\r\n      <BaseDialogs\r\n        userId={userId}\r\n        items={filtred}\r\n        onSearch={onChangeInput}\r\n        inputValue={inputValue}\r\n        setCurrentDialog={setCurrentDialog}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({ dialogs }) => dialogs, dialogsActions)(Dialogs)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Messages as BaseMessages } from 'components'\r\nimport { messagesActions } from 'redux/actions'\r\n\r\nconst Dialogs = ({ fetchMessages, currentDialog, items, avatar, messages, answers }) => {\r\n  useEffect(() => {\r\n    if (fetchMessages) {\r\n      fetchMessages(currentDialog)\r\n    }\r\n  }, [currentDialog])\r\n\r\n  return (\r\n    <>\r\n      <BaseMessages\r\n        items={items}\r\n        avatar={avatar}\r\n        messages={messages}\r\n        answers={answers}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  ({ dialogs, messages }) => ({\r\n    currentDialog: dialogs.currentDialog,\r\n    items: messages.items,\r\n  }),\r\n  messagesActions\r\n)(Dialogs)\r\n","import React from 'react'\r\nimport './Home.scss'\r\nimport $ from 'jquery'\r\nimport { Message, ChatInput } from 'components'\r\nimport { Dialogs, Messages } from 'containers'\r\nimport Messages2 from '../../components/Messages/index2'\r\n\r\nimport dialogsJson from 'dialogs.json'\r\n\r\nconst Home = ({ messages, onToggle, onAdd, Add, answers }) => {\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat__sidebar\">\r\n          <div className=\"chat__sidebar-header chat__sidebar-header--online\">\r\n            <div className=\"chat__sidebar-header-avatar\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat__sidebar-dialogs\">\r\n            <Dialogs \r\n            // items={dialogsJson} \r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"chat__dialog\">\r\n          <div className=\"chat__dialog-header chat__dialog-header--online\">\r\n            <div className=\"chat__dialog-header-avatar\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\" />\r\n            </div>\r\n            <b className=\"chat__dialog-header-fullname\">Roman</b>\r\n          </div>\r\n          <div className=\"chat__dialog-message\" id='wrapp'>\r\n\r\n            <Messages \r\n           messages={messages}\r\n           answers={answers}\r\n           avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n           />\r\n            \r\n            {/* <Messages2\r\n              \r\n            /> */}\r\n            {/* <Message\r\n              messages={messages}\r\n              answers={answers}\r\n              onToggle={onToggle}\r\n              avatar=\"https://thumbs.dreamstime.com/b/male-avatar-icon-flat-style-male-user-icon-cartoon-man-avatar-vector-stock-91602735.jpg\"\r\n            /> */}\r\n            \r\n          </div>\r\n          <div className=\"chat__dialog-input\">\r\n            <ChatInput onAdd={onAdd}\r\n            Add={Add} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ChatInput, Message } from 'components'\r\nimport { Home } from './pages'\r\n\r\nconst HomeCont = () => {\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('messages') || '[]')\r\n    setMessages(saved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('messages', JSON.stringify(messages))\r\n  }, [messages])\r\n\r\n  const addHandler = (title) => {\r\n    const newMessage = {\r\n      title: title,\r\n      id: Date.now(),\r\n      isMe: true,\r\n      date:new Date()\r\n    }\r\n    setMessages((prev) => [...prev, newMessage])\r\n  }\r\n  const keyPress = (title) => {\r\n    const newMessage = {\r\n      title: title,\r\n      id: Date.now(),\r\n      isMe: false,\r\n      date: new Date()\r\n    }\r\n    setMessages((prev) => [...prev, newMessage])\r\n  }\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n      <Home\r\n        messages={messages}\r\n        onAdd={addHandler}\r\n        Add={keyPress}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeCont\r\n","import React from 'react'\r\nimport './styles/index.scss'\r\nimport { Auth } from './pages'\r\nimport { Route } from 'react-router-dom'\r\nimport { Home } from 'pages'\r\nimport HomeContainer from './HomeContainer'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* <Route exact path='/s' component={HomeContainer} /> */}\r\n        <HomeContainer />\r\n        {/* <h1>Hello</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  items: [],\r\n  currentDialog: null,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'DIALOGS:SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n      }\r\n    case 'DIALOGS:SET_CURRENT_DIALOG':\r\n      return {\r\n        ...state,\r\n        currentDialog: payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  items: null,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'MESSAGES:SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport dialogs from './dialogs'\r\nimport messages from './messages'\r\n \r\nexport default combineReducers({\r\n    dialogs,\r\n    messages,\r\n}) ","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from 'redux/store'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      {/* <React.StrictMode> */}\r\n        <App />\r\n      {/* </React.StrictMode> */}\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}